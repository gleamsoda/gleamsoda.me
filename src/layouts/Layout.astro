---
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { site } from "@/config/site";

interface Props {
  title?: string;
  description?: string;
}

let { title, description } = Astro.props;
title = title ? `${title} | ${site.name}` : site.name;
---

<!doctype html>
<html lang="ja" class="h-full antialiased">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/icon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="flex h-full bg-zinc-50 dark:bg-black">
    <div class="flex w-full">
      <div class="fixed inset-0 flex justify-center sm:px-8">
        <div class="flex w-full max-w-7xl lg:px-8">
          <div
            class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20"
          >
          </div>
        </div>
      </div>
      <div class="relative flex w-full flex-col">
        <Header client:load currentPath={Astro.url.pathname} />
        <main class="flex-auto">
          <slot />
        </main>
        <Footer />
      </div>
    </div>
  </body>
</html>

<script is:inline>
const theme = (() => {
  if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    return localStorage.getItem("theme");
  }
  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  }
  return "light";
})();

if (theme === "light") {
  document.documentElement.classList.remove("dark");
} else {
  document.documentElement.classList.add("dark");
}
window.localStorage.setItem("theme", theme);
</script>
